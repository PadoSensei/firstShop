[{"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Product\\Product.jsx":"4","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Product\\styles.js":"5","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\index.js":"8","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Products\\styles.js":"9","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\lib\\commerce.js":"10","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\styles.js":"12","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\Cartitem.jsx":"13","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\CartItem.jsx":"15","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Checkout\\Checkout.jsx":"16","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Checkout\\styles.js":"17","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\PaymentForm\\PaymentForm.jsx":"18","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\AddressForm\\AddressForm.jsx":"19","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\AddressForm\\CustomTextField.jsx":"20"},{"size":147,"mtime":1610270038585,"results":"21","hashOfConfig":"22"},{"size":2037,"mtime":1610567823072,"results":"23","hashOfConfig":"22"},{"size":794,"mtime":1610315214876,"results":"24","hashOfConfig":"22"},{"size":1161,"mtime":1610315423623,"results":"25","hashOfConfig":"22"},{"size":268,"mtime":1610274067228,"results":"26","hashOfConfig":"22"},{"size":1260,"mtime":1610383135776,"results":"27","hashOfConfig":"22"},{"size":1564,"mtime":1610277831385,"results":"28","hashOfConfig":"22"},{"size":158,"mtime":1610371464689,"results":"29","hashOfConfig":"22"},{"size":286,"mtime":1610295983437,"results":"30","hashOfConfig":"22"},{"size":123,"mtime":1610299714008,"results":"31","hashOfConfig":"22"},{"size":1720,"mtime":1610578829978,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1610372676351,"results":"33","hashOfConfig":"22"},{"size":1169,"mtime":1610387203459,"results":"34","hashOfConfig":"22"},{"size":332,"mtime":1610380258359,"results":"35","hashOfConfig":"22"},{"size":1169,"mtime":1610387203459,"results":"36","hashOfConfig":"22"},{"size":1798,"mtime":1610413020138,"results":"37","hashOfConfig":"22"},{"size":1157,"mtime":1610388772116,"results":"38","hashOfConfig":"22"},{"size":139,"mtime":1610404557769,"results":"39","hashOfConfig":"22"},{"size":4610,"mtime":1610582302922,"results":"40","hashOfConfig":"22"},{"size":469,"mtime":1610408096555,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1aif22z",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\index.js",[],["86","87"],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\App.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Product\\Product.jsx",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Product\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Navbar\\Navbar.jsx",["88","89"],"import React from 'react'\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core'\nimport { ShoppingCart } from '@material-ui/icons';\nimport logo from '../../components/assets/logo512.png'\n\nimport { Link, useLocation } from 'react-router-dom'\nimport useStyles from './styles';\n\nconst Navbar = ({ totalItems }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n\n\n  return (\n    <>\n      <AppBar position='fixed' className={classes.appBar} color='inherit'>\n        <Toolbar>\n          <Typography component={ Link } to=\"/\" variant='h6' className={classes.title} color=\"inherit\">\n            <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\n            Paddy's Whiskey Shop\n          </Typography>\n          <div className={classes.grow} />\n          {location.pathname === '/' && (\n          <div className={classes.button}>\n            <IconButton component={ Link } to=\"/cart\" aria-label=\"Show Cart Items\" color=\"inherit\">\n                <Badge badgeContent={totalItems} color='secondary'>\n                  <ShoppingCart />\n                </Badge>\n            </IconButton>\n          </div>)} \n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nexport default Navbar\n","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\index.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Products\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\lib\\commerce.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\Cartitem.jsx",["90","91","92","93"],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Checkout\\Checkout.jsx",["94","95","96","97"],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\Checkout\\styles.js",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\PaymentForm\\PaymentForm.jsx",[],"C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\AddressForm\\AddressForm.jsx",["98","99","100","101"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    \n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n    console.log(options)\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n    \n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  // useEffect(() => {\n  //   if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  // }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            {/* <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid> */}\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;","C:\\Users\\Acer\\Desktop\\CodeWorks\\PracticeProjects\\testshop\\src\\components\\AddressForm\\CustomTextField.jsx",["102"],"import React from 'react'\nimport { TextField, Grid } from '@material-ui/core';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nconst CustomTextField = ({name, label, required }) => {\n  const { control } = useFormContext()\n  return (\n    <Grid item xs={12} sm={6}>\n      <Controller\n        as={TextField}\n        fullWidth\n        name={name}\n        label={label}\n        required={required}\n        />\n    </Grid>\n  )\n}\n\nexport default CustomTextField\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":46,"nodeType":"109","messageId":"110","endLine":2,"endColumn":54},{"ruleId":"107","severity":1,"message":"111","line":2,"column":56,"nodeType":"109","messageId":"110","endLine":2,"endColumn":60},{"ruleId":"107","severity":1,"message":"112","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":20},{"ruleId":"107","severity":1,"message":"113","line":2,"column":22,"nodeType":"109","messageId":"110","endLine":2,"endColumn":28},{"ruleId":"107","severity":1,"message":"114","line":2,"column":36,"nodeType":"109","messageId":"110","endLine":2,"endColumn":47},{"ruleId":"107","severity":1,"message":"115","line":2,"column":49,"nodeType":"109","messageId":"110","endLine":2,"endColumn":60},{"ruleId":"107","severity":1,"message":"116","line":2,"column":55,"nodeType":"109","messageId":"110","endLine":2,"endColumn":71},{"ruleId":"107","severity":1,"message":"117","line":2,"column":73,"nodeType":"109","messageId":"110","endLine":2,"endColumn":80},{"ruleId":"107","severity":1,"message":"113","line":2,"column":82,"nodeType":"109","messageId":"110","endLine":2,"endColumn":88},{"ruleId":"107","severity":1,"message":"118","line":12,"column":22,"nodeType":"109","messageId":"110","endLine":12,"endColumn":35},{"ruleId":"107","severity":1,"message":"119","line":14,"column":10,"nodeType":"109","messageId":"110","endLine":14,"endColumn":25},{"ruleId":"107","severity":1,"message":"120","line":15,"column":10,"nodeType":"109","messageId":"110","endLine":15,"endColumn":24},{"ruleId":"107","severity":1,"message":"121","line":32,"column":9,"nodeType":"109","messageId":"110","endLine":32,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":42,"column":6,"nodeType":"124","endLine":42,"endColumn":8,"suggestions":"125"},{"ruleId":"107","severity":1,"message":"126","line":6,"column":11,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'setActiveStep' is assigned a value but never used.","'shippingOptions' is assigned a value but never used.","'shippingOption' is assigned a value but never used.","'fetchShippingOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'control' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"132","text":"133"},[1687,1689],"[checkoutToken.id]"]